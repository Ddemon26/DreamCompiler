#!/usr/bin/env python3
import subprocess, re, sys
from pathlib import Path

TEST_DIR = Path('tests')

def run_test(path: Path) -> bool:
    text = path.read_text()
    m = re.search(r"//\s*Expected:\s*(.*)", text)
    if not m:
        print(f"[SKIP] {path}")
        return True
    expected = m.group(1).strip()
    res = subprocess.run(['zig', 'build', 'run', '--', str(path)], capture_output=True, text=True)
    if res.returncode != 0:
        sys.stdout.write(res.stdout)
        sys.stderr.write(res.stderr)
        print(f"[FAIL] {path} (compile error)")
        return False
    res2 = subprocess.run(['./dream'], capture_output=True, text=True)
    if res2.returncode != 0:
        sys.stdout.write(res2.stdout)
        sys.stderr.write(res2.stderr)
        print(f"[FAIL] {path} (runtime error)")
        return False
    output = res2.stdout.strip()
    if output == expected:
        print(f"[PASS] {path}")
        return True
    else:
        print(f"[FAIL] {path} (expected '{expected}', got '{output}')")
        return False

def main():
    pattern = '**/*.dr'
    tests = sorted(TEST_DIR.glob(pattern))
    ok = True
    for t in tests:
        if not run_test(t):
            ok = False
    if not ok:
        sys.exit(1)

if __name__ == '__main__':
    main()
