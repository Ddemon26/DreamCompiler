[
  {
    "name": "keyword",
    "regex": "\\b(if|else|while|for|do|break|continue|return|int|string|bool|true|false|func|Console|WriteLine|switch|case|default)\\b",
    "scope": "keyword.control"
  },
  {
    "name": "number",
    "regex": "\\b\\d+\\b",
    "scope": "constant.numeric"
  },
  {
    "name": "string",
    "regex": "\"([^\\\"\\n]|\\\\.)*\"",
    "scope": "string.quoted.double"
  },
  {
    "name": "commentDoc",
    "regex": "/\\*\\*[^*]*\\*+([^/*][^*]*\\*+)*/|///.*",
    "scope": "comment.block.documentation"
  },
  {
    "name": "comment",
    "regex": "//.*",
    "scope": "comment.line.double-slash"
  },
  {
    "name": "commentBlock",
    "regex": "/\\*[^*]*\\*+([^/*][^*]*\\*+)*/",
    "scope": "comment.block"
  },
  {
    "name": "identifier",
    "regex": "\b[a-zA-Z_][a-zA-Z0-9_]*\b",
    "scope": "variable.other"
  },
  {
    "name": "operator",
    "regex": "\\+\\+|--|\\+=|-=|\\*=|/=|%=|\\+|-|\\*|\\/|%|<=|>=|==|!=|<|>|&&|\\|\\||!|=|\\?",
    "scope": "keyword.operator"
  },
  {
    "name": "semicolon",
    "regex": ";",
    "scope": "punctuation.terminator.statement"
  },
  {
    "name": "comma",
    "regex": ",",
    "scope": "punctuation.separator.comma"
  },
  {
    "name": "dot",
    "regex": "\\.",
    "scope": "punctuation.accessor"
  },
  {
    "name": "paren",
    "regex": "[()]",
    "scope": "punctuation.section.parens"
  },
  {
    "name": "brace",
    "regex": "[{}]",
    "scope": "punctuation.section.braces"
  },
  {
    "name": "bracket",
    "regex": "[\\\\[\\\\]]",
    "scope": "punctuation.section.brackets"
  }
]