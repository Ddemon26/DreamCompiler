func int main() {
    if (Vulkan.available() == 0) {
        Console.WriteLine("no Vulkan");
        return 0;
    }

    VkApplicationInfo app = new VkApplicationInfo();
    app.applicationName = "DreamVulkanTest";
    app.engineName = "Dream";
    app.apiVersion = Vulkan.version();

    VkInstanceCreateInfo ci = new VkInstanceCreateInfo();
    ci.appInfo = app;
    ci.enabledExtensionCount = 0;
    ci.ppEnabledExtensionNames = 0;

    VkInstance instance;
    VkResult res = Vulkan.createInstance(ci, instance);
    if (res != VkResult.Success) {
        return 0;
    }

    VkPhysicalDevice dev = Vulkan.pickFirstPhysicalDevice(instance);
    VkDeviceQueueCreateInfo qci = new VkDeviceQueueCreateInfo();
    qci.queueFamilyIndex = 0;
    qci.queueCount = 1;
    qci.pQueuePriorities = 0;

    VkDeviceCreateInfo dci = new VkDeviceCreateInfo();
    dci.queueCreateInfoCount = 1;
    dci.pQueueCreateInfos = qci;

    VkDevice device;
    res = Vulkan.createDevice(dev, dci, null, device);
    if (res != VkResult.Success) {
        Vulkan.destroyInstance(instance);
        return 0;
    }

    VkSurfaceCreateInfo si = new VkSurfaceCreateInfo();
    si.handle1 = 0;
    si.handle2 = 0;
    VkSurfaceKHR surf;
    Vulkan.createSurface(instance, si, surf);

    VkSwapchainKHR sc;
    Vulkan.createDefaultSwapchain(device, surf, 640, 480, sc);
    Vulkan.destroySwapchain(device, sc);

    Vulkan.destroySurface(instance, surf);
    Vulkan.destroyDevice(device, null);
    Vulkan.destroyInstance(instance);
    Console.WriteLine("ok"); // Expected: C code generated successfully
    return 0;
}
