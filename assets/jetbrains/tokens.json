[
  {
    "name": "keyword",
    "regex": "\\b(if|else|while|for|do|break|continue|return|class|struct|new|int|string|bool|float|char|void|var|let|true|false|func|switch|case|default|Console|WriteLine|Write|ReadLine)\\b",
    "flex": "\b(if|else|while|for|do|break|continue|return|class|struct|new|int|string|bool|float|char|void|var|let|true|false|func|switch|case|default|Console|WriteLine|Write|ReadLine)\b",
    "scope": "keyword.control"
  },
  {
    "name": "number",
    "regex": "\\b([0-9]+\\\\.[0-9]+|[0-9]+)\\b",
    "flex": "\b([0-9]+\\\\.[0-9]+|[0-9]+)\b",
    "scope": "constant.numeric"
  },
  {
    "name": "string",
    "regex": "\\\"([^\\\\\\\"\\\\n]|\\\\\\\\.)*\\\"",
    "scope": "string.quoted.double"
  },
  {
    "name": "commentDoc",
    "regex": "/\\*\\*[^]*?\\*/|///.*",
    "scope": "comment.block.documentation"
  },
  {
    "name": "comment",
    "regex": "//.*",
    "scope": "comment.line.double-slash"
  },
  {
    "name": "commentBlock",
    "regex": "/\\*[\\s\\S]*?\\*/",
    "scope": "comment.block"
  },
  {
    "name": "function",
    "regex": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()",
    "flex": "\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()",
    "scope": "entity.name.function"
  },
  {
    "name": "identifier",
    "regex": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
    "flex": "\b[a-zA-Z_][a-zA-Z0-9_]*\b",
    "scope": "variable.other"
  },
  {
    "name": "operator",
    "regex": "\\\\+\\\\+|--|\\\\+=|-=|\\\\*=|/=|%=|&=|\\\\|=|\\\\^=|<<=|>>=|\\\\+|-|\\\\*|/|%|\\\\^|<<|>>|<=|>=|==|!=|<|>|&&|\\\\|\\\\||&|\\\\||~|!|=|\\\\?|\\\\?\\\\?|\\\\?\\\\?=",
    "scope": "keyword.operator"
  },
  {
    "name": "semicolon",
    "regex": ";",
    "scope": "punctuation.terminator.statement"
  },
  {
    "name": "comma",
    "regex": ",",
    "scope": "punctuation.separator.comma"
  },
  {
    "name": "dot",
    "regex": "\\\\.",
    "scope": "punctuation.accessor"
  },
  {
    "name": "paren",
    "regex": "[()]",
    "scope": "punctuation.section.parens"
  },
  {
    "name": "brace",
    "regex": "[{}]",
    "scope": "punctuation.section.braces"
  },
  {
    "name": "bracket",
    "regex": "[\\\\[\\\\]]",
    "scope": "punctuation.section.brackets"
  }
]